#!/usr/bin/zsh

source "$HOME/dotfiles/scripts/library"
source "$HOME/dotfiles/scripts/hw-info"

clear
echo "Installing base packages and applying base config..."
echo "----------------------------------------------------"
echo ""

# Ensure rustup is installed for paru, because rust conflicts with rustup which I have a dep
sudo pacman -S rustup
rustup default stable

# Paru
if sudo pacman -Qs paru >/dev/null; then
  print_success "paru is installed..."
else
  print_info "paru is not installed. Will be installed now!"
  git clone https://aur.archlinux.org/paru.git ~/paru
  cd ~/paru || exit
  makepkg -si
  cd ~/dotfiles/ || return
  rm -rf ~/paru
  print_success "paru has been installed successfully."
fi

# Install Packages
packages=(
  "7zip"
  "acpi"
  "adw-gtk-theme"
  "alacritty"
  "android-studio"
  "asdf-vm"
  "audit"
  "avahi"
  "base"
  "base-devel"
  "bat"
  "bind" #nslookup
  "bleachbit"
  "bluez"
  "bluez-utils"
  "brave-bin"
  "brightnessctl"
  "ccache" # For faster nvim builds
  "clang"
  "cmake"
  "curl"
  "docker"
  "docker-compose"
  "dunst"
  "eza"
  "fd"
  "ffmpeg"
  "figlet"
  "flameshot"
  "foot"
  "fwupd"
  "fzf"
  "genymotion"
  "ghostscript"
  "git"
  "git-delta"
  "github-cli"
  "gnome-terminal"
  "grim"
  "gtk-engine-murrine" # Needed by gtk tokyonight
  "gvim"
  "htop"
  "imagemagick"
  "iwd"
  "jq"
  "kitty"
  "lazydocker"
  "lazygit"
  "libinput"
  "libreoffice-still"
  "librewolf-bin"
  "libva-utils"
  "libvdpau-va-gl"
  "linux-headers"
  "mesa"
  "mpv"
  "nautilus"
  "ninja"
  "noto-fonts-emoji"
  "openssh"
  "pavucontrol"
  "pipewire"
  "pipewire-alsa"
  "pipewire-audio"
  "pipewire-jack"
  "pipewire-pulse"
  "posix"
  "power-profiles-daemon"
  "preload"
  "python-pip"
  "qt6ct"
  "ripdrag-git"
  "ripgrep"
  "rofi"
  "rsync"
  "rustup"
  "scrcpy"
  "sshpass"
  "terminus-font"
  "tldr"
  "tmux"
  "tree-sitter-cli-git"
  "ttf-dm-mono-git"
  "ttf-hack-nerd"
  "ttf-meslo-nerd"
  "udisks2" # Needed by fwupd
  "ueberzugpp"
  "unzip" # Needed by asdf
  "update-grub"
  "vdpauinfo"
  "visual-studio-code-bin"
  "vulkan-tools"
  "watchman-bin"
  "wget"
  "wireplumber"
  "wireshark-qt"
  "wol"
  "wpa_supplicant"
  "wtype"
  "xdg-desktop-portal-gtk"
  "xdg-user-dirs"
  "xdg-utils"
  "yazi-git"
  "zsh"
)

sudo ln -s /usr/bin/brave /usr/bin/brave-browser

if cpu_is_intel; then
  packages+=("intel-ucode")
fi

# Prefer AMD GPU packages, instead of integrated ones.
# Do not 'install' both, because of potential downsides
if gpu_has_amd; then
  packages+=(
    "mesa-vdpau"
    "radeontop"
    "vulkan-radeon"
  )
elif gpu_has_intel; then
  packages+=(
    "intel-gpu-tools"
    "intel-media-driver"
    "vulkan-intel"
  )
fi

~/dotfiles/scripts/create-template-env

# Install required packages
install_packages "${packages[@]}"

~/dotfiles/st/build
~/dotfiles/scripts/build-nvim

bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"

# Install custom issue (login prompt)
echo ""
print_info "Installing login screen..."
sudo cp ~/dotfiles/login/issue /etc/issue

print_success "DONE!"
