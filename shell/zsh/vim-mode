#!/usr/bin/zsh

bindkey -v # enable vi mode


###########
# Options #
###########

# Make word movement consistent with vim
autoload -Uz select-word-style
select-word-style bash


##########
# Cursor #
##########

# Change cursor shape for different vi modes.
zle-keymap-select() {
    case $KEYMAP in
        vicmd) echo -ne '\e[1 q';;      # block
        viins|main) echo -ne '\e[5 q';; # beam
    esac
}
zle -N zle-keymap-select

zle-line-init() {
    zle -K viins # initiate `vi insert` as keymap (can be removed if `bindkey -V` has been set elsewhere)
    echo -ne "\e[5 q"
}
zle -N zle-line-init

echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.



############
# Keydings #
############
bindkey -M viins '^R' fzf-history-widget # fzf should be sourced first
vi-redo() { zle redo }
zle -N vi-redo
bindkey -M vicmd '^R' vi-redo

# allow vv to edit the command line (standard behaviour)
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey -M vicmd 'vv' edit-command-line


bindkey -M viins '^H' backward-delete-char # ^H is same as ^h
bindkey -M viins '^W' backward-kill-word

function vi-jk-escape() {
  LBUFFER+='j'         # insert 'j'
  zle reset-prompt     # redraw line so 'j' appears
  local key
  if read -t 0.3 -k 1 key; then
    if [[ $key == 'k' ]]; then
      LBUFFER="${LBUFFER%j}"  # delete the 'j'
      zle vi-cmd-mode         # switch to normal mode
    else
      LBUFFER+="$key"         # insert the second key normally
    fi
  fi
}
zle -N vi-jk-escape
bindkey -M viins 'j' vi-jk-escape



############
# Surround #
############

autoload -Uz surround

zle -N delete-surround surround
zle -N add-surround surround
zle -N change-surround surround

bindkey -M vicmd sr change-surround
bindkey -M vicmd sd delete-surround
bindkey -M vicmd sa add-surround
bindkey -M visual sa add-surround

autoload -U select-bracketed
zle -N select-bracketed
for m in visual viopp; do
  for c in {a,i}${(s..)^:-'()[]{}<>bB'}; do
    bindkey -M $m $c select-bracketed
  done
done

autoload -U select-quoted
zle -N select-quoted
for m in visual viopp; do
  for c in {a,i}{\',\",\`}; do
    bindkey -M $m $c select-quoted
  done
done

for m in visual viopp; do
  bindkey -M $m aq select-in-word
  bindkey -M $m iq select-in-word
done


